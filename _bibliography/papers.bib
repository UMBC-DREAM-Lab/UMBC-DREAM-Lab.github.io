---
---

@string{aps = {American Physical Society,}}

@article{raff_ngram_2016,
abstract = {Malware classification using machine learning algorithms is a difficult task, in part due to the absence of strong natural features in raw executable binary files. Byte n-grams previously have been used as features, but little work has been done to explain their performance or to understand what concepts are actually being learned. In contrast to other work using n-gram features, in this work we use orders of magnitude more data, and we perform feature selection during model building using Elastic-Net regularized Logistic Regression. We compute a regularization path and analyze novel {\{}$\backslash$em multi-byte identifiers{\}}. Through this process, we discover significant previously unreported issues with byte n-gram features that cause their benefits and practicality to be overestimated. Three primary issues emerged from our work. First, we discovered a flaw in how previous corpora were created that leads to an over-estimation of classification accuracy. Second, we discovered that most of the information contained in n-grams stem from string features that could be obtained in simpler ways. Finally, we demonstrate that n-gram features promote overfitting, even with linear models and extreme regularization.},
author = {Raff, Edward and Zak, Richard and Cox, Russell and Sylvester, Jared and Yacci, Paul and Ward, Rebecca and Tracy, Anna and McLean, Mark and Nicholas, Charles},
doi = {10.1007/s11416-016-0283-1},
issn = {2263-8733},
journal = {Journal of Computer Virology and Hacking Techniques},
keywords = {byte n-grams,elastic-net,malware classification,multi-byte identifier},
month = {sep},
title = {{An investigation of byte n-gram features for malware classification}},
url = {http://link.springer.com/10.1007/s11416-016-0283-1},
year = {2016}
}
@inproceedings{raff2017peheader,
abstract = {Many efforts have been made to use various forms of domain knowledge in malware detection. Currently there exist two common approaches to malware detection without domain knowledge, namely byte n-grams and strings. In this work we explore the feasibility of applying neural networks to malware detection and feature learning. We do this by restricting ourselves to a minimal amount of domain knowledge in order to extract a portion of the Portable Executable (PE) header. By doing this we show that neural networks can learn from raw bytes without explicit feature construction, and perform even better than a domain knowledge approach that parses the PE header into explicit features.},
address = {New York, NY, USA},
author = {Raff, Edward and Sylvester, Jared and Nicholas, Charles},
booktitle = {Proceedings of the 10th ACM Workshop on Artificial Intelligence and Security},
doi = {10.1145/3128572.3140442},
isbn = {978-1-4503-5202-4},
keywords = {cyber security,deep learning,malware detection},
pages = {121--132},
publisher = {ACM},
series = {AISec '17},
title = {{Learning the PE Header, Malware Detection with Minimal Domain Knowledge}},
url = {http://doi.acm.org/10.1145/3128572.3140442},
year = {2017}
}
@inproceedings{Zak2017,
abstract = {Recent work has shown that byte n-grams learn mostly low entropy features, such as function imports and strings, which has brought into question whether byte n-grams can learn information corresponding to higher entropy levels, such as binary code. We investigate that hypothesis in this work by performing byte n-gram analysis on only specific sub-sections of the binary file, and compare to results ob- tained by n-gram analysis on assembly code generated from disassembled binaries. We do this by leveraging the change in model performance and ensembles to glean insights about the data. In doing so we discover that byte n-grams can learn from the code regions, but do not necessarily learn any new information. We also discover that assembly n-grams may not be as effective as previously thought and that disam- biguating instructions by their binary opcode, an approach not previously used for malware detection, is critical for model generalization.},
author = {Zak, Richard and Raff, Edward and Nicholas, Charles},
booktitle = {2017 12th International Conference on Malicious and Unwanted Software (MALWARE)},
doi = {10.1109/MALWARE.2017.8323963},
isbn = {978-1-5386-1436-5},
month = {oct},
pages = {109--118},
publisher = {IEEE},
title = {{What can N-grams learn for malware detection?}},
url = {http://ieeexplore.ieee.org/document/8323963/},
year = {2017}
}
@inproceedings{raff_lzjd_2017,
abstract = {The Normalized Compression Distance (NCD) has been used in a number of domains to compare objects with varying feature types. This flexibility comes from the use of general purpose compression algorithms as the means of computing distances between byte sequences. Such flexibility makes NCD particularly attractive for cases where the right features to use are not obvious, such as malware classification. However, NCD can be computationally demanding, thereby restricting the scale at which it can be applied. We introduce an alternative metric also inspired by compression, the Lempel-Ziv Jaccard Distance (LZJD). We show that this new distance has desirable theoretical properties, as well as comparable or superior performance for malware classification, while being easy to implement and orders of magnitude faster in practice.},
address = {New York, New York, USA},
author = {Raff, Edward and Nicholas, Charles},
booktitle = {Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining - KDD '17},
doi = {10.1145/3097983.3098111},
isbn = {9781450348874},
pages = {1007--1015},
publisher = {ACM Press},
title = {{An Alternative to NCD for Large Sequences, Lempel-Ziv Jaccard Distance}},
url = {http://dl.acm.org/citation.cfm?doid=3097983.3098111},
year = {2017}
}
@article{JMLR:v18:16-131,
abstract = {Java Statistical Analysis Tool (JSAT) is a Machine Learning library written in pure Java. It works to fill a void in the Java ecosystem for a general purpose library that is relatively high performance and flexible, which is not adequately fulfilled by Weka (Hall et al., 2009) and Java-ML (Abeel et al., 2009). Almost all of the algorithms are independently implemented using an Object- Oriented framework. JSAT is made available under the GNU GPL license here: github.com/EdwardRaff/JSAT.},
author = {Raff, Edward},
journal = {Journal of Machine Learning Research},
number = {23},
pages = {1--5},
title = {{JSAT: Java Statistical Analysis Tool, a Library for Machine Learning}},
url = {http://jmlr.org/papers/v18/16-131.html},
volume = {18},
year = {2017}
}
@inproceedings{raff_shwel,
abstract = {There are currently few methods that can be applied to malware classification problems which don't require domain knowledge to apply. In this work, we develop our new SHWeL feature vector representation, by extending the recently proposed Lempel-Ziv Jaccard Distance. These SHWeL vectors improve upon LZJD's accuracy, outperform byte n-grams, and allow us to build efficient algorithms for both training (a weakness of byte n-grams) and inference (a weakness of LZJD). Furthermore, our new SHWeL method also allows us to directly tackle the class imbalance problem, which is common for malware-related tasks. Compared to existing methods like SMOTE, SHWeL provides significantly improved accuracy while reducing algorithmic complexity to O(N). Because our approach is developed without the use of domain knowledge, it can be easily re-applied to any new domain where there is a need to classify byte sequences.},
address = {New York, NY, USA},
author = {Raff, Edward and Nicholas, Charles},
booktitle = {Proceedings of the 10th ACM Workshop on Artificial Intelligence and Security},
doi = {10.1145/3128572.3140446},
isbn = {978-1-4503-5202-4},
keywords = {cyber security,lzjd,malware classification,shwel},
pages = {111--120},
publisher = {ACM},
series = {AISec '17},
title = {{Malware Classification and Class Imbalance via Stochastic Hashed LZJD}},
url = {http://doi.acm.org/10.1145/3128572.3140446},
year = {2017}
}
@inproceedings{MalConv,
abstract = {In this work we introduce malware detection from raw byte sequences as a fruitful research area to the larger machine learning community. Building a neural network for such a problem presents a number of interesting challenges that have not occurred in tasks such as image processing or NLP. In particular, we note that detection from raw bytes presents a sequence problem with over two million time steps and a problem where batch normalization appear to hinder the learning process. We present our initial work in building a solution to tackle this problem, which has linear complexity dependence on the sequence length, and allows for interpretable sub-regions of the binary to be identified. In doing so we will discuss the many challenges in building a neural network to process data at this scale, and the methods we used to work around them.},
archivePrefix = {arXiv},
arxivId = {1710.09435},
author = {Raff, Edward and Barker, Jon and Sylvester, Jared and Brandon, Robert and Catanzaro, Bryan and Nicholas, Charles},
booktitle = {AAAI Workshop on Artificial Intelligence for Cyber Security},
eprint = {1710.09435},
month = {oct},
title = {{Malware Detection by Eating a Whole EXE}},
url = {http://arxiv.org/abs/1710.09435},
year = {2018}
}
@inproceedings{Fleshman2018,
abstract = {As machine-learning (ML) based systems for malware detection become more prevalent, it becomes necessary to quantify the benefits compared to the more traditional anti-virus (AV) systems widely used today. It is not practical to build an agreed upon test set to benchmark malware detection systems on pure classification performance. Instead we tackle the problem by creating a new testing methodology, where we evaluate the change in performance on a set of known benign {\&} malicious files as adversarial modifications are performed. The change in performance combined with the evasion techniques then quantifies a system's robustness against that approach. Through these experiments we are able to show in a quantifiable way how purely ML based systems can be more robust than AV products at detecting malware that attempts evasion through modification, but may be slower to adapt in the face of significantly novel attacks.},
archivePrefix = {arXiv},
arxivId = {1806.04773},
author = {Fleshman, William and Raff, Edward and Zak, Richard and McLean, Mark and Nicholas, Charles},
booktitle = {2018 13th International Conference on Malicious and Unwanted Software (MALWARE)},
doi = {10.1109/MALWARE.2018.8659360},
eprint = {1806.04773},
isbn = {978-1-7281-0155-2},
month = {oct},
pages = {1--10},
publisher = {IEEE},
title = {{Static Malware Detection {\&} Subterfuge: Quantifying the Robustness of Machine Learning and Current Anti-Virus}},
url = {http://arxiv.org/abs/1806.04773 https://ieeexplore.ieee.org/document/8659360/},
year = {2018}
}
@inproceedings{scws_18,
address = {New York, NY, USA},
author = {Raff, Edward and Sylvester, Jared and Nicholas, Charles},
booktitle = {Proceedings of the 27th ACM International Conference on Information and Knowledge Management},
doi = {10.1145/3269206.3271690},
isbn = {978-1-4503-6014-2},
keywords = {consistent weighted sampling,jaccard similarity,min-hashing},
pages = {1203--1212},
publisher = {ACM},
series = {CIKM '18},
title = {{Engineering a Simplified 0-Bit Consistent Weighted Sampling}},
url = {http://doi.acm.org/10.1145/3269206.3271690},
year = {2018}
}

@inproceedings{grad_dsaa,
author = {Raff, Edward and Sylvester, Jared},
booktitle = {The 5th IEEE International Conference on Data Science and Advanced Analytics (DSAA)},
title = {{Gradient Reversal Against Discrimination : A Fair Neural Network Learning Approach}},
year = {2018}
}

@article{raff_lzjd_digest,
abstract = {Recent work has proposed the Lempel-Ziv Jaccard Distance (LZJD) as a method to measure the similarity between binary byte sequences for malware classification. We propose and test LZJD's effectiveness as a similarity digest hash for digital forensics. To do so we develop a high performance Java implementation with the same command-line arguments as sdhash, making it easy to integrate into existing work-flows. Our testing shows that LZJD is effective for this task, and significantly outperforms sdhash and ssdeep in its ability to match related file fragments and is faster at comparison time.},
archivePrefix = {arXiv},
arxivId = {1708.03346},
author = {Raff, Edward and Nicholas, Charles K.},
doi = {10.1016/j.diin.2017.12.004},
eprint = {1708.03346},
issn = {17422876},
journal = {Digital Investigation},
month = {feb},
title = {{Lempel-Ziv Jaccard Distance, an effective alternative to ssdeep and sdhash}},
url = {https://doi.org/10.1016/j.diin.2017.12.004},
year = {2018}
}
@inproceedings{hashgram_2018,
abstract = {N-grams have long been used as features for classification problems, and their distribution often allows selection of the top-k occurring n-grams as a reliable first-pass to feature selection. However, this top-k selection can be a performance bottleneck, especially when dealing with massive item sets and corpora. In this work we introduce Hash-Grams, an approach to perform top-k feature mining for classification problems. We show that the Hash-Gram approach can be up to three orders of magnitude faster than exact top-k selection algorithms. Using a malware corpus of over 2 TB in size, we show how Hash-Grams retain comparable classification accuracy, while dramatically reducing computational requirements.},
address = {Halifax, NS, Canada},
author = {Raff, Edward and Nicholas, Charles},
booktitle = {Proceedings of the ACM Symposium on Document Engineering 2018},
doi = {10.1145/3209280.3229085},
publisher = {ACM},
title = {{Hash-Grams: Faster N-Gram Features for Classification and Malware Detection}},
url = {http://doi.acm.org/10.1145/3209280.3229085},
year = {2018}
}
@inproceedings{pylzjd-proc-scipy-2019,
author = {Raff, Edward and Aurelio, Joe and Nicholas, Charles},
booktitle = {Proceedings of the 18th Python in Science Conference},
doi = {10.25080/Majora-7ddc1dd1-00e},
editor = {Calloway, Chris and Lippa, David and Niederhut, Dillon and Shupe, David},
pages = {97--102},
title = {{PyLZJD: An Easy to Use Tool for Machine Learning}},
url = {http://conference.scipy.org/proceedings/scipy2019/pylzjd.html},
year = {2019}
}
@inproceedings{Kilograms_2019,
abstract = {N-grams have been a common tool for information retrieval and machine learning applications for decades. In nearly all previous works, only a few values ofn are tested, with n {\textgreater} 6 being exceed- ingly rare. Larger values ofn are not tested due to computational burden or the fear of overfitting. In this work, we present a method to find the top-k most frequent n-grams that is 60× faster for small n, and can tackle large n ≥ 1024. Despite the unprecedented size ofn considered, we show how these features still have predictive ability for malware classification tasks. More important, large n- grams provide benefits in producing features that are interpretable by malware analysis, and can be used to create general purpose signatures compatible with industry standard tools like Yara. Fur- thermore, the counts of common n-grams in a file may be added as features to publicly available human-engineered features that rival efficacy of professionally-developed features when used to train gradient-boosted decision tree models on the EMBER dataset.},
author = {Raff, Edward and Fleming, William and Zak, Richard and Anderson, Hyrum and Finlayson, Bill and Nicholas, Charles K. and Mclean, Mark},
booktitle = {Proceedings of KDD 2019 Workshop on Learning and Mining for Cybersecurity (LEMINCS'19)},
title = {{KiloGrams: Very Large N-Grams for Malware Classification}},
url = {https://arxiv.org/abs/1908.00200},
year = {2019}
}
@inproceedings{Raff2019d,
abstract = {Defenses against adversarial examples, when using the ImageNet dataset, are historically easy to defeat. The common understanding is that a combination of simple image transformations and other various defenses are insufficient to provide the necessary protection when the obfuscated gradient is taken into account. In this paper, we explore the idea of stochastically combining a large number of individually weak defenses into a single barrage of randomized transformations to build a strong defense against adversarial attacks. We show that, even after accounting for obfuscated gradients, the Barrage of Random Transforms (BaRT) is a resilient defense against even the most difficult attacks, such as PGD. BaRT achieves up to a 24x improvement in accuracy compared to previous work, and has even extended effectiveness out to a previously untested maximum adversarial perturbation of ϵ=32.},
author = {Raff, E. and Sylvester, J. and Forsyth, S. and McLean, M.},
booktitle = {Proceedings of the IEEE Computer Society Conference on Computer Vision and Pattern Recognition},
doi = {10.1109/CVPR.2019.00669},
isbn = {9781728132938},
issn = {10636919},
keywords = {Big Data,Categorization,Deep Learning,Large Scale Methods,Recognition: Detection,Retrieval},
title = {{Barrage of random transforms for adversarially robust defense}},
volume = {2019-June},
year = {2019}
}
@article{Fleshman2018a,
abstract = {Adversarial attacks against Neural Networks are a problem of considerable importance, for which effective defenses are not yet readily available. We make progress toward this problem by showing that non-negative weight constraints can be used to improve resistance in specific scenarios. In particular, we show that they can provide an effective defense for binary classification problems with asymmetric cost, such as malware or spam detection. We also show how non-negativity can be leveraged to reduce an attacker's ability to perform targeted misclassification attacks in other domains such as image processing.},
archivePrefix = {arXiv},
arxivId = {1806.06108},
author = {Fleshman, William and Raff, Edward and Sylvester, Jared and Forsyth, Steven and McLean, Mark},
eprint = {1806.06108},
journal = {AAAI-2019 Workshop on Artificial Intelligence for Cyber Security},
title = {{Non-Negative Networks Against Adversarial Attacks}},
url = {http://arxiv.org/abs/1806.06108},
year = {2019}
}
@inproceedings{Nguyen2019_filename_malicious,
author = {Nguyen, Andre T and Raff, Edward and Sant-Miller, Aaron},
booktitle = {2019 IEEE International Conference on Big Data (Big Data)},
doi = {10.1109/BigData47090.2019.9006132},
isbn = {978-1-7281-0858-2},
month = {dec},
pages = {1322--1331},
publisher = {IEEE},
title = {{Would a File by Any Other Name Seem as Malicious?}},
url = {https://ieeexplore.ieee.org/document/9006132/},
year = {2019}
}
@inproceedings{Zhang2020a,
abstract = {Artificial intelligence (AI)-based decision-making systems are employed nowadays in an ever growing number of online as well as offline services–some of great importance. Depending on sophisticated learning algorithms and available data, these systems are increasingly becoming automated and data-driven. However, these systems can impact individuals and communities with ethical or legal consequences. Numerous approaches have therefore been proposed to develop decision making systems that are discrimination-conscious by-design. However, these methods assume the underlying data distribution is stationary without drift, which is counterfactual in many real world applications. In addition, their focus has been largely on minimizing discrimination while maximizing prediction performance without necessary flexibility in customizing the tradeoff according to different applications. To this end, we propose a learning algorithm for fair classification that also adapts to evolving data streams and further allows for a flexible control on the degree of accuracy and fairness. The positive results on a set of discriminated and non-stationary data streams demonstrate the effectiveness and flexibility of this approach.},
author = {Zhang, Wenbin and Zhang, Mingli and Zhang, Ji and Liu, Zhen and Chen, Zhiyuan and Wang, Jianwu and Raff, Edward and Messina, Enza},
booktitle = {2020 IEEE 32nd International Conference on Tools with Artificial Intelligence (ICTAI)},
doi = {10.1109/ICTAI50040.2020.00069},
isbn = {978-1-7281-9228-4},
keywords = {ai fairness,flexible fairness,online classification},
month = {nov},
pages = {399--406},
publisher = {IEEE},
title = {{Flexible and Adaptive Fairness-aware Learning in Non-stationary Data Streams}},
url = {https://ieeexplore.ieee.org/document/9288346/},
year = {2020}
}
@inproceedings{Pillai2020,
abstract = {Ordering the selection of training data using active learning can lead to improvements in learning efficiently from smaller corpora. We present an exploration of active learning approaches applied to three grounded language problems of varying complexity in order to analyze what methods are suitable for improving data efficiency in learning. We present a method for analyzing the complexity of data in this joint problem space, and report on how characteristics of the underlying task, along with design decisions such as feature selection and classification model, drive the results. We observe that representativeness, along with diversity, is crucial in selecting data samples.},
archivePrefix = {arXiv},
arxivId = {2011.08021},
author = {Pillai, Nisha and Raff, Edward and Ferraro, Francis and Matuszek, Cynthia},
booktitle = {2020 IEEE International Conference on Big Data (Big Data)},
eprint = {2011.08021},
title = {{Sampling Approach Matters: Active Learning for Robotic Language Acquisition}},
url = {http://arxiv.org/abs/2011.08021},
year = {2020}
}
@inproceedings{Eren2020,
abstract = {The world has faced the devastating outbreak of Severe Acute Respiratory Syndrome Coronavirus-2 (SARS-CoV-2), or COVID-19, in 2020. Research in the subject matter was fast-tracked to such a point that scientists were struggling to keep up with new findings. With this increase in the scientific literature, there arose a need for organizing those documents. We describe an approach to organize and visualize the scientific literature on or related to COVID-19 using machine learning techniques so that papers on similar topics are grouped together. By doing so, the navigation of topics and related papers is simplified. We implemented this approach using the widely recognized CORD-19 dataset to present a publicly available proof of concept.},
author = {Eren, Maksim Ekin and Solovyev, Nick and Raff, Edward and Nicholas, Charles and Johnson, Ben},
booktitle = {Proceedings of the ACM Symposium on Document Engineering 2020},
doi = {10.1145/3395027.3419591},
keywords = {acm reference format,charles nicholas,clustering,covid-19,dimensionality reduction,document visualization,edward raff,maksim ekin eren,nick solovyev},
pages = {1--4},
title = {{COVID-19 Kaggle Literature Organization}},
url = {https://dl.acm.org/doi/10.1145/3395027.3419591},
year = {2020}
}
@inproceedings{Raff2020a,
abstract = {Malware classification is a difficult problem, to which machine learning methods have been applied for decades. Yet progress has often been slow, in part due to a number of unique difficulties with the task that occur through all stages of the developing a machine learning system: data collection, labeling, feature creation and selection, model selection, and evaluation. In this survey we will review a number of the current methods and challenges related to malware classification, including data collection, feature extraction, and model construction, and evaluation. Our discussion will include thoughts on the constraints that must be considered for machine learning based solutions in this domain, and yet to be tackled problems for which machine learning could also provide a solution. This survey aims to be useful both to cybersecurity practitioners who wish to learn more about how machine learning can be applied to the malware problem, and to give data scientists the necessary background into the challenges in this uniquely complicated space.},
archivePrefix = {arXiv},
arxivId = {2006.09271},
author = {Raff, Edward and Nicholas, Charles},
booktitle = {NeurIPS 2020 Workshop: ML Retrospectives, Surveys {\&} Meta-Analyses (ML-RSA)},
eprint = {2006.09271},
keywords = {68t01,68t99,ams subject classifications,cyber security,machine learning,malware detection},
title = {{A Survey of Machine Learning Methods and Challenges for Windows Malware Classification}},
url = {http://arxiv.org/abs/2006.09271},
year = {2020}
}
@inproceedings{Ordun2020a,
abstract = {With the increased attention on thermal imagery for Covid-19 screening, the public sector may believe there are new opportunities to exploit thermal as a modality for computer vision and AI. Thermal physiology research has been ongoing since the late nineties. This research lies at the intersections of medicine, psychology, machine learning, optics, and affective computing. We will review the known factors of thermal vs. RGB imaging for facial emotion recognition. But we also propose that thermal imagery may provide a semi-anonymous modality for computer vision, over RGB, which has been plagued by misuse in facial recognition. However, the transition to adopting thermal imagery as a source for any human-centered AI task is not easy and relies on the availability of high fidelity data sources across multiple demographics and thorough validation. This paper takes the reader on a short review of machine learning in thermal FER and the limitations of collecting and developing thermal FER data for AI training. Our motivation is to provide an introductory overview into recent advances for thermal FER and stimulate conversation about the limitations in current datasets.},
archivePrefix = {arXiv},
arxivId = {2009.10589},
author = {Ordun, Catherine and Raff, Edward and Purushotham, Sanjay},
booktitle = {AAAI FSS-20: Artificial Intelligence in Government and Public Sector},
eprint = {2009.10589},
title = {{The Use of AI for Thermal Emotion Recognition: A Review of Problems and Limitations in Standard Design and Data}},
url = {http://arxiv.org/abs/2009.10589},
year = {2020}
}
@inproceedings{Rahnama2020,
abstract = {Deep neural networks (DNNs) are vulnerable to subtle adversarial perturbations applied to the input. These adversarial perturbations, though imperceptible, can easily mislead the DNN. In this work, we take a control theoretic approach to the problem of robustness in DNNs. We treat each individual layer of the DNN as a nonlinear dynamical system and use Lyapunov theory to prove stability and robustness locally. We then proceed to prove stability and robustness globally for the entire DNN. We develop empirically tight bounds on the response of the output layer, or any hidden layer, to adversarial perturbations added to the input, or the input of hidden layers. Recent works have proposed spectral norm regularization as a solution for improving robustness against l2 adversarial attacks. Our results give new insights into how spectral norm regularization can mitigate the adversarial effects. Finally, we evaluate the power of our approach on a variety of data sets and network architectures and against some of the well-known adversarial attacks.},
archivePrefix = {arXiv},
arxivId = {1911.04636},
author = {Rahnama, Arash and Nguyen, Andre T. and Raff, Edward},
booktitle = {The IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)},
eprint = {1911.04636},
pages = {8178--8187},
title = {{Robust Design of Deep Neural Networks against Adversarial Attacks based on Lyapunov Theory}},
url = {http://arxiv.org/abs/1911.04636},
year = {2020}
}
@inproceedings{Raff2020autoyara,
abstract = {Yara rules are a ubiquitous tool among cybersecurity practitioners and analysts. Developing high-quality Yara rules to detect a malware family of interest can be labor- and time-intensive, even for expert users. Few tools exist and relatively little work has been done on how to automate the generation of Yara rules for specific families. In this paper, we leverage large n-grams ({\$}n \backslashgeq 8{\$}) combined with a new biclustering algorithm to construct simple Yara rules more effectively than currently available software. Our method, AutoYara, is fast, allowing for deployment on low-resource equipment for teams that deploy to remote networks. Our results demonstrate that AutoYara can help reduce analyst workload by producing rules with useful true-positive rates while maintaining low false-positive rates, sometimes matching or even outperforming human analysts. In addition, real-world testing by malware analysts indicates AutoYara could reduce analyst time spent constructing Yara rules by 44-86{\%}, allowing them to spend their time on the more advanced malware that current tools can't handle. Code will be made available at https://github.com/NeuromorphicComputationResearchProgram .},
archivePrefix = {arXiv},
arxivId = {2009.03779},
author = {Raff, Edward and Zak, Richard and Munoz, Gary Lopez and Fleming, William and Anderson, Hyrum S. and Filar, Bobby and Nicholas, Charles and Holt, James},
booktitle = {13th ACM Workshop on Artificial Intelligence and Security (AISec'20)},
doi = {10.1145/3411508.3421372},
eprint = {2009.03779},
title = {{Automatic Yara Rule Generation Using Biclustering}},
url = {http://arxiv.org/abs/2009.03779},
year = {2020}
}
@inproceedings{Raff2020,
abstract = {Prior work inspired by compression algorithms has described how the Burrows Wheeler Transform can be used to create a distance measure for bioinformatics problems. We describe issues with this approach that were not widely known, and introduce our new Burrows Wheeler Markov Distance (BWMD) as an alternative. The BWMD avoids the shortcomings of earlier efforts, and allows us to tackle problems in variable length DNA sequence clustering. BWMD is also more adaptable to other domains, which we demonstrate on malware classification tasks. Unlike other compression-based distance metrics known to us, BWMD works by embedding sequences into a fixed-length feature vector. This allows us to provide significantly improved clustering performance on larger malware corpora, a weakness of prior methods.},
archivePrefix = {arXiv},
arxivId = {1912.13046},
author = {Raff, Edward and Nicholas, Charles and McLean, Mark},
booktitle = {The Thirty-Fourth AAAI Conference on Artificial Intelligence},
doi = {10.1609/aaai.v34i04.5994},
eprint = {1912.13046},
pages = {5444--5453},
title = {{A New Burrows Wheeler Transform Markov Distance}},
url = {http://arxiv.org/abs/1912.13046},
year = {2020}
}
@inproceedings{Nolet2020,
abstract = {The Uniform Manifold Approximation and Projection (UMAP) algorithm has become widely popular for its ease of use, quality of results, and support for exploratory, unsupervised, supervised, and semi-supervised learning. While many algorithms can be ported to a GPU in a simple and direct fashion, such efforts have resulted in inefficent and inaccurate versions of UMAP. We show a number of techniques that can be used to make a faster and more faithful GPU version of UMAP, and obtain speedups of up to 100x in practice. Many of these design choices/lessons are general purpose and may inform the conversion of other graph and manifold learning algorithms to use GPUs. Our implementation has been made publicly available as part of the open source RAPIDS cuML library(https://github.com/rapidsai/cuml).},
archivePrefix = {arXiv},
arxivId = {2008.00325},
author = {Nolet, Corey J. and Lafargue, Victor and Raff, Edward and Nanditale, Thejaswi and Oates, Tim and Zedlewski, John and Patterson, Joshua},
booktitle = {The Thirty-Fifth AAAI Conference on Artificial Intelligence},
eprint = {2008.00325},
title = {{Bringing UMAP Closer to the Speed of Light with GPU Acceleration}},
url = {http://arxiv.org/abs/2008.00325},
year = {2021}
}
@inproceedings{Raff2020c,
abstract = {There has been increasing concern within the machine learning community that we are in a reproducibility crisis. As many have begun to work on this problem, all work we are aware of treat the issue of reproducibility as an intrinsic binary property: a paper is or is not reproducible. Instead, we consider modeling the reproducibility of a paper as a survival analysis problem. We argue that this perspective represents a more accurate model of the underlying meta-science question of reproducible research, and we show how a survival analysis allows us to draw new insights that better explain prior longitudinal data. The data and code can be found at https://github.com/EdwardRaff/Research-Reproducibility-Survival-Analysis},
archivePrefix = {arXiv},
arxivId = {2012.09932},
author = {Raff, Edward},
booktitle = {The Thirty-Fifth AAAI Conference on Artificial Intelligence},
eprint = {2012.09932},
title = {{Research Reproducibility as a Survival Analysis}},
url = {http://arxiv.org/abs/2012.09932},
year = {2021}
}
@inproceedings{Raff2020b,
abstract = {Recent works within machine learning have been tackling inputs of ever-increasing size, with cybersecurity presenting sequence classification problems of particularly extreme lengths. In the case of Windows executable malware detection, inputs may exceed {\$}100{\$} MB, which corresponds to a time series with {\$}T=100,000,000{\$} steps. To date, the closest approach to handling such a task is MalConv, a convolutional neural network capable of processing up to {\$}T=2,000,000{\$} steps. The {\$}\backslashmathcal{\{}O{\}}(T){\$} memory of CNNs has prevented further application of CNNs to malware. In this work, we develop a new approach to temporal max pooling that makes the required memory invariant to the sequence length {\$}T{\$}. This makes MalConv {\$}116\backslashtimes{\$} more memory efficient, and up to {\$}25.8\backslashtimes{\$} faster to train on its original dataset, while removing the input length restrictions to MalConv. We re-invest these gains into improving the MalConv architecture by developing a new Global Channel Gating design, giving us an attention mechanism capable of learning feature interactions across 100 million time steps in an efficient manner, a capability lacked by the original MalConv CNN. Our implementation can be found at https://github.com/NeuromorphicComputationResearchProgram/MalConv2},
archivePrefix = {arXiv},
arxivId = {2012.09390},
author = {Raff, Edward and Fleshman, William and Zak, Richard and Anderson, Hyrum S. and Filar, Bobby and McLean, Mark},
booktitle = {The Thirty-Fifth AAAI Conference on Artificial Intelligence},
eprint = {2012.09390},
title = {{Classifying Sequences of Extreme Length with Constant Memory Applied to Malware Detection}},
url = {http://arxiv.org/abs/2012.09390},
year = {2021}
}
@inproceedings{Ordun2020,
abstract = {This paper illustrates five different techniques to assess the distinctiveness of topics, key terms and features, speed of information dissemination, and network behaviors for Covid19 tweets. First, we use pattern matching and second, topic modeling through Latent Dirichlet Allocation (LDA) to generate twenty different topics that discuss case spread, healthcare workers, and personal protective equipment (PPE). One topic specific to U.S. cases would start to uptick immediately after live White House Coronavirus Task Force briefings, implying that many Twitter users are paying attention to government announcements. We contribute machine learning methods not previously reported in the Covid19 Twitter literature. This includes our third method, Uniform Manifold Approximation and Projection (UMAP), that identifies unique clustering-behavior of distinct topics to improve our understanding of important themes in the corpus and help assess the quality of generated topics. Fourth, we calculated retweeting times to understand how fast information about Covid19 propagates on Twitter. Our analysis indicates that the median retweeting time of Covid19 for a sample corpus in March 2020 was 2.87 hours, approximately 50 minutes faster than repostings from Chinese social media about H7N9 in March 2013. Lastly, we sought to understand retweet cascades, by visualizing the connections of users over time from fast to slow retweeting. As the time to retweet increases, the density of connections also increase where in our sample, we found distinct users dominating the attention of Covid19 retweeters. One of the simplest highlights of this analysis is that early-stage descriptive methods like regular expressions can successfully identify high-level themes which were consistently verified as important through every subsequent analysis.},
archivePrefix = {arXiv},
arxivId = {2005.03082},
author = {Ordun, Catherine and Purushotham, Sanjay and Raff, Edward},
booktitle = {epiDAMIK 2020: 3rd epiDAMIK ACM SIGKDD International Workshop on Epidemiology meets Data Mining and Knowledge Discovery},
eprint = {2005.03082},
title = {{Exploratory Analysis of Covid-19 Tweets using Topic Modeling, UMAP, and DiGraphs}},
url = {http://arxiv.org/abs/2005.03082},
year = {2020}
}
